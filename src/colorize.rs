use colored::Colorize;

pub enum STL {
    Red,
    Green,
    Blue,
    Yellow,
    White,
    Black,
    Cyan,
    Magenta,
    BrightRed,
    BrightGreen,
    BrightBlue,
    BrightYellow,
    BrightWhite,
    BrightBlack,
    BrightCyan,
    BrightMagenta,
    OnRed,
    OnGreen,
    OnBlue,
    OnYellow,
    OnWhite,
    OnBlack,
    OnCyan,
    OnMagenta,
    OnBrightRed,
    OnBrightGreen,
    OnBrightBlue,
    OnBrightYellow,
    OnBrightWhite,
    OnBrightBlack,
    OnBrightCyan,
    OnBrightMagenta,
    Normal,
    TrueColor(u8, u8, u8),

    Bold,
}

pub fn styled_output(s: &str, styles: Vec<STL>) {
    let mut output = s.to_string();
    for style in styles {
        output = match style {
            STL::Red => output.red().to_string(),
            STL::Green => output.green().to_string(),
            STL::Blue => output.blue().to_string(),
            STL::Yellow => output.yellow().to_string(),
            STL::White => output.white().to_string(),
            STL::Black => output.black().to_string(),
            STL::Cyan => output.cyan().to_string(),
            STL::Magenta => output.magenta().to_string(),
            STL::BrightRed => output.bright_red().to_string(),
            STL::BrightGreen => output.bright_green().to_string(),
            STL::BrightBlue => output.bright_blue().to_string(),
            STL::BrightYellow => output.bright_yellow().to_string(),
            STL::BrightWhite => output.bright_white().to_string(),
            STL::BrightBlack => output.bright_black().to_string(),
            STL::BrightCyan => output.bright_cyan().to_string(),
            STL::BrightMagenta => output.bright_magenta().to_string(),
            STL::OnRed => output.on_red().to_string(),
            STL::OnGreen => output.on_green().to_string(),
            STL::OnBlue => output.on_blue().to_string(),
            STL::OnYellow => output.on_yellow().to_string(),
            STL::OnWhite => output.on_white().to_string(),
            STL::OnBlack => output.on_black().to_string(),
            STL::OnCyan => output.on_cyan().to_string(),
            STL::OnMagenta => output.on_magenta().to_string(),
            STL::OnBrightRed => output.on_bright_red().to_string(),
            STL::OnBrightGreen => output.on_bright_green().to_string(),
            STL::OnBrightBlue => output.on_bright_blue().to_string(),
            STL::OnBrightYellow => output.on_bright_yellow().to_string(),
            STL::OnBrightWhite => output.on_bright_white().to_string(),
            STL::OnBrightBlack => output.on_bright_black().to_string(),
            STL::OnBrightCyan => output.on_bright_cyan().to_string(),
            STL::OnBrightMagenta => output.on_bright_magenta().to_string(),
            STL::Normal => output.normal().to_string(),
            STL::TrueColor(r, g, b) => output.truecolor(r, g, b).to_string(),
            STL::Bold => output.bold().to_string(),
        };
    }
    print!("{}", output);
}
